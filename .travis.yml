language: haskell

ghc:
  - 7.8.4

sudo: false

cache:
 directories:
  - $HOME/cache
  - $HOME/.opam
  - $HOME/.cabal

addons:
  apt:
    sources:
     - avsm
    packages:
     - opam
#    - haskell-platform
#    - cabal-install

env:
 matrix:
  - AGDA="2.4.2.3"  INTERNAL_COQ=""     AXIOMATIZATION=""
#  - AGDA=""     INTERNAL_COQ="yes"  AXIOMATIZATION=""
  - AGDA=""     INTERNAL_COQ=""     AXIOMATIZATION="yes"

install:
 - export PATH="$HOME/.cabal/bin:$PATH"
# - rm -rf $HOME/cache
 - mkdir -p "$HOME/cache"
 - cat $HOME/.cabal/config
# - if [ ! -z "$AGDA" -a ! -d "$HOME/cache/.cabal-sandbox" ]; then (cd "$HOME/cache" && cabal sandbox init); fi
 - if [ ! -z "$AGDA" ]; then cabal update; fi
 - if [ ! -z "$AGDA" ]; then cabal install cabal-install; fi
 - if [ ! -z "$AGDA" ]; then cabal install alex; fi
 - if [ ! -z "$AGDA" ]; then cabal install happy; fi
 - if [ ! -z "$AGDA" ]; then cabal install haskell-src-exts; fi
 - if [ ! -z "$AGDA" ]; then cabal install Agda-$AGDA; fi


before_script:
 - uname -a
 - if [ ! -z "$AXIOMATIZATION$INTERNAL_COQ" -a ! -d "$HOME/.opam" ]; then opam init; fi
 - if [ ! -z "$AXIOMATIZATION$INTERNAL_COQ" ]; then opam update; fi
# - if [ ! -z "$AXIOMATIZATION$INTERNAL_COQ" ]; then opam repo add coq-core-dev https://coq.inria.fr/opam/core-dev; fi
# - if [ ! -z "$AXIOMATIZATION$INTERNAL_COQ" ]; then opam repo add coq-released https://coq.inria.fr/opam/released; fi
 - if [ ! -z "$AXIOMATIZATION$INTERNAL_COQ" ]; then opam list; fi
 - if [ ! -z "$AXIOMATIZATION$INTERNAL_COQ" ]; then opam install -j4 -v coq.8.5~beta1; fi
 - if [ ! -z "$AXIOMATIZATION$INTERNAL_COQ" ]; then opam list; fi
# - if [ ! -z "$AXIOMATIZATION$INTERNAL_COQ" ]; then opam install -j4 -v coq:template-coq.1.0.0~beta2; fi
 - if [ ! -z "$AXIOMATIZATION$INTERNAL_COQ" ]; then opam list; fi

script: false
